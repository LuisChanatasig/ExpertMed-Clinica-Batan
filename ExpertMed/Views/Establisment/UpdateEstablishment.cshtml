@model ExpertMed.Models.EstablishmentDto

@{
    var isEdit = Model != null && Model.Id > 0;
    ViewData["Title"] = isEdit ? "Actualizar Establecimiento" : "Crear Establecimiento";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<div class="card">
    <div class="card-header">
        <h4 class="card-title">@ViewData["Title"]</h4>
    </div>
    <div class="card-body">
        <form id="establishmentForm" method="post" enctype="multipart/form-data"
              asp-controller="Establisment"
              asp-action="@(isEdit ? "UpdateEstablishment" : "CreateEstablishment")">

            @if (isEdit)
            {
                <input type="hidden" name="EstablishmentId" value="@Model.Id" />
            }

            <div class="mb-3">
                <label for="name" class="form-label">Nombre <span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="name" name="Name" value="@Model?.Name" required />
            </div>

            <div class="mb-3">
                <label for="address" class="form-label">Dirección</label>
                <input type="text" class="form-control" id="address" name="Address" value="@Model?.Address" />
            </div>

            <div class="mb-3">
                <label for="emissionPoint" class="form-label">Punto de Emisión</label>
                <input type="text" class="form-control" id="emissionPoint" name="EmissionPoint" maxlength="4" value="@Model?.EmissionPoint" />
            </div>

            <div class="mb-3">
                <label for="pointOfSale" class="form-label">Punto de Venta</label>
                <input type="text" class="form-control" id="pointOfSale" name="PointOfSale" maxlength="4" value="@Model?.PointOfSale" />
            </div>

            <div class="mb-3">
                <label for="sequentialBilling" class="form-label">Secuencial de Facturación</label>
                <input type="number" class="form-control" id="sequentialBilling" name="SequentialBilling" value="@Model?.SequentialBilling" />
            </div>
            <div class="mb-3">
                <label for="logo" class="form-label">Cambiar logo</label>
                <input type="file" class="form-control" id="logo" name="Logo" accept="image/*" />
                <div id="logoPreview" class="mt-2">
                    @if (Model.Logo != null && Model.Logo.Length > 0)
                    {
                        var base64Logo = Convert.ToBase64String(Model.Logo);
                        <img src="data:image/png;base64,@base64Logo" class="img-thumbnail" style="max-width:150px;" />
                    }
                </div>
            </div>

@* 
            <div id="logoPreview" class="mt-2">
                @if (Model?.Logo != null && Model.Logo.Length > 0)
                {
                    var base64Logo = Convert.ToBase64String(Model.Logo);
                    <img src="data:image/png;base64,@base64Logo" class="img-thumbnail" style="max-width:150px;" />
                }
            </div> *@

            <button type="submit" class="btn btn-primary">
                <i class="mdi @(isEdit ? "mdi-pencil" : "mdi-content-save-outline") me-1"></i>
                @(isEdit ? "Actualizar" : "Crear")
            </button>
        </form>

        <div id="responseMessage" class="mt-3"></div>
    </div>
</div>

@section Scripts {
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <script>
            Swal.fire({
                title: '¡Éxito!',
                text: '@successMessage',
                icon: 'success',
                confirmButtonText: 'OK',
                timer: 3000
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <script>
            Swal.fire({
                title: 'Error',
                text: '@errorMessage',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        </script>
    }

    <script>
        $(document).ready(function () {
            $("#logo").on("change", function () {
                const file = this.files[0];
                if (!file) return $("#logoPreview").html("");

                if (!file.type.startsWith("image/")) {
                    showMessage("Solo se permiten archivos de imagen.", "danger");
                    this.value = "";
                    return;
                }

                if (file.size > 2 * 1024 * 1024) {
                    showMessage("El tamaño máximo del logo es 2MB.", "danger");
                    this.value = "";
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    $("#logoPreview").html(
                        `<img src="${e.target.result}" class="img-thumbnail mt-2" style="max-width:150px;">`
                    );
                };
                reader.readAsDataURL(file);
            });

            function showMessage(message, type) {
                $("#responseMessage").html(
                    `<div class="alert alert-${type}" role="alert">${message}</div>`
                );
            }
        });
    </script>
}
